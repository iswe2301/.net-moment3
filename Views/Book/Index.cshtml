@model IEnumerable<BookApp.Models.Book>

@{
    ViewData["Title"] = "Böcker";
}

<h2>Böcker</h2>

<p>
    <a asp-action="Create" class="btn btn-primary mt-3 mb-3"><i class="bi bi-plus-lg"></i> Lägg till ny bok</a>
</p>

<form method="get" class="mb-4 mt-4">
    <div class="input-group">
        <!-- Sökfält för att söka efter boktitel eller författare -->
        <label for="search" class="visually-hidden">Sök efter boktitel eller författare</label>
        <!-- Sparar söksträngen i querystring -->
        <input type="text" name="search" class="form-control" placeholder="Sök efter boktitel eller författare..."
            value="@Context.Request.Query["search"]">
        <button type="submit" class="btn btn-primary"><i class="bi bi-search"></i> Sök</button>
        <!-- Kontrollerar om sökfältet är ifyllt -->
        @if (!string.IsNullOrEmpty(Context.Request.Query["search"]))
        {
            <!-- Länk/knapp för att återställa/visa alla böcker -->
            <a asp-action="Index" class="btn btn-secondary"><i class="bi bi-x-circle"></i> Visa alla böcker</a>
        }
    </div>
</form>

<div class="table-responsive mt-4">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PublicationYear)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Author)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PublicationYear)
                    </td>
                    <td>
                        <!-- Kontrollerar om det finns en författare eller inte -->
                        @(item.Author != null ? item.Author.Name : "Ingen författare")
                    </td>
                    <td class="text-center">
                        <div class="btn-group" role="group">
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm"><i
                                    class="bi bi-pencil-square"></i> Ändra</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm"><i
                                    class="bi bi-info-circle"></i> Detaljer</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm"><i
                                    class="bi bi-trash"></i> Radera</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <!-- Kontrollerar om det inte finns några böcker och skriver ut en varning -->
    @if (ViewBag.NoBooks == true)
    {
        <div class="alert alert-warning text-center mb-4 mt-4">
            <p>Inga böcker hittades...</p>
        </div>
    }
</div>
